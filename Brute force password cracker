üîê SCADA Brute Force Authentication Testing

This project demonstrates a brute force attack targeting a SCADA system (ScadaBR) login page, performed within a controlled lab environment using Kali Linux. The objective was to simulate a password attack using real-world leaked credentials and observe authentication behaviors.

 ‚ö†Ô∏è Disclaimer: This project was conducted strictly for educational and ethical hacking purposes in a controlled environment. Never attempt unauthorized access on any live or production system.



üß™ Environment Setup

- Operating System: Kali Linux (VM)
- Target Application: [ScadaBR](https://sourceforge.net/projects/scadabr/)
- Target URL: `http://192.168.95.5:8080/ScadaBR`
- Tool Used: `Wfuzz` for brute force fuzzing



üîç Step-by-Step Breakdown

Step 1: Wordlist Preparation

A well-known leaked password list was used to simulate the attack:

- File Used: `rockyou.txt`
- Path: `/usr/share/wordlists/rockyou.txt`
- Password Count: ~14 million compromised entries


Step 2: Creating or Selecting a Username List

A custom `users.txt` file was created to supply potential usernames during the attack.

- Path: `/usr/share/wordlists/users.txt`
- Usernames:
  ```
  user
  scadabr
  admin
  root
  test
  ```

üí° Tip: If you're unsure which usernames to try, Kali Linux provides several pre-compiled username lists in the `/usr/share/wordlists/` directory. One such list is:
 
 /usr/share/wordlists/metasploit/unix_users.txt
 
 
These built-in lists contain commonly used or default usernames and can be helpful in broad enumeration efforts.

Step 3: Executing the Brute Force Attack

The attack was launched using `Wfuzz`, targeting the ScadaBR login endpoint.

bash
wfuzz -c -z file,/usr/share/wordlists/users.txt \
      -z file,/usr/share/wordlists/rockyou.txt \
      -d "username=FUZZ&password=FUZ2Z" \
      --hc 200 \
      http://192.168.95.5:8080/ScadaBR/j_security_check

 Wfuzz Cmd execution.jpeg

- `FUZZ` and `FUZ2Z` are placeholders for dynamic fuzzing inputs.
- `--hc 200` hides HTTP 200 responses (commonly used for failed login attempts).

![Wfuzz Result](./Wfuzz%20Cmd%20execution.jpeg)

![Recon Screenshot](./recon.jpeg)

üìä Observations

- Typical Response: Most requests returned HTTP 200, indicating failed logins.
- Notable Response: One request returned HTTP 302 (redirect), suggesting successful login.

  - Credentials:
    - Username: `admin`
    - Password: `cowboys`


 ‚úÖ Successful Login

Upon manually entering the discovered credentials on the ScadaBR web interface, login was successful.

Result: ‚úÖ Authentication Bypassed ‚Äì Access Gained*


üí° Key Takeaways

- Systems without rate limiting, CAPTCHA, or account lockout policies are highly vulnerable to brute force attacks.
- Monitoring HTTP status codes during fuzzing can reveal signs of successful authentication.
- Built-in username and password lists in Kali Linux significantly accelerate enumeration efforts.
- Always conduct testing in isolated environments and ensure ethical guidelines are followed.
